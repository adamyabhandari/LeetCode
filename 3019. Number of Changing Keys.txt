3019. Number of Changing Keys

You are given a 0-indexed string s typed by a user. Changing a key is defined as using a key different from the last used key. For example, s = "ab" has a change of a key while s = "bBBb" does not have any.
Return the number of times the user had to change the key.
Note: Modifiers like shift or caps lock won't be counted in changing the key that is if a user typed the letter 'a' and then the letter 'A' then it will not be considered as a changing of key.
Example 1:
Input: s = "aAbBcC"
Output: 2
Explanation:
From s [0] = not counted. 'a' to s[1] = 'A', there is no change of key as caps lock or shift is
From s [1] = 'A' to s [2] = 'b', there is a change of key.
From s [2] = 'b' to s [3] = 'B', not counted. there is no change of key as caps lock or shift is
From s [3] = 'B' to s [4] = 'c', there is a change of key.
From s [4] = 'c' to s [5] = 'C', not counted.

SOLUTION
class Solution {
    public int countKeyChanges(String s) {
        s=s.toLowerCase();
        int c=0;
        for(int i=0;i<s.length()-1;i++){
            if(s.charAt(i)!=s.charAt(i+1)){
                c++;
            }
        }
        return c;
    }
}