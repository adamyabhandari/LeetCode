34. Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value. If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]


SOLUTION

class Solution {
    public int[] searchRange(int[] nums, int target) {
        ArrayList<Integer> list=new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            if(target==nums[i]){
                list.add(i);
            }
        }
        int[] arr={-1,-1};
        //int[] res=new int[list.size()];
        int[] r=new int[2];
        if(list.size()==0){
            return arr;
        }
        else{
            r[0]=list.get(0);
            r[1]=list.get(list.size()-1);
            return r;
        }
    }
}