2574. Left and Right Sum Differences

Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:
answer.length == nums.length.
answer [i] = |leftSum[i] rightSum[i]|.
Where:
leftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.
rightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0
Return the array answer
Example 1:
Input: nums = [10,4,8,3]
Output: [15,1,11,22]
Explanation: The array leftSum is [0,10,14,22] and the array rightSum is [15,11,3,0]. The array answer is [10 15,10 - 11,143,22 - 0] = [15,1,11,22].

SOLUTION
class Solution {
    public int[] leftRightDifference(int[] nums) {
        int [] lsum=new int[nums.length];
        int [] rsum=new int[nums.length];
        int a=0;
        for(int i=0;i<nums.length;i++){
            
            lsum[i]=a;
            a+=nums[i];
        }
        int b=0,k=0;
        for(int j=nums.length-1;j>=0;j--){
            
            rsum[j]=b;
        
            b+=nums[j];
        }
        int [] res=new int[nums.length];
        for(int u=0;u<nums.length;u++){
            res[u]=Math.abs(lsum[u]-rsum[u]);
        }
        return res;
    }
}